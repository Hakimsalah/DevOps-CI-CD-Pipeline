apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: backendnp
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: hakim2002/backend:15
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: "postgres.backendnp.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "centregreffeDB"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-db-postgresql
                  key: postgres-password
            - name: FRONTEND_URL
              value: "http://localhost:3000"
          # ========================
          # ✅ Probes pour santé du container
          # ========================
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 5
          # ========================
          # ✅ Init container pour attendre la DB
          # ========================
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - |
                    until nc -z $DB_HOST $DB_PORT; do
                      echo "Waiting for Postgres..."
                      sleep 3
                    done
                    echo "Postgres is ready"
